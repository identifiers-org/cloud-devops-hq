---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mirid-controller
spec:
  selector:
    matchLabels:
      tier: api
      component: mirid-controller
      {{- (include "common_labels" .) | indent 6 }}
  replicas: {{ .Values.mirid_controller.replicas }}
  template:
    metadata:
      labels:
        tier: api
        component: mirid-controller
        {{- (include "common_labels" .) | indent 8 }}
    spec:
      {{- (include "affinity_requirements" .) | indent 6 }}
      containers:
        - name: cloud-hq-ws-mirid-controller
          image: {{ .Values.mirid_controller.image }}
          resources:
            requests:
              memory: {{ .Values.redis.requests.memory }}
              cpu: {{ .Values.redis.requests.cpu }}
          env:
            - name: HQ_WS_MIRID_CONTROLLER_JVM_MEMORY_MAX
              value: {{ .Values.redis.requests.memory | lower | trimSuffix "i" | quote }}
            - name: HQ_WS_MIRID_CONTROLLER_CONFIG_APPLICATION_ACTIVE_PROFILE
              value: "authenabled"
            - name: HQ_WS_MIRID_CONTROLLER_CONFIG_JDBC_URL
              {{- with .Values.mirid_controller.database }}
              value: {{ (printf "jdbc:%s://%s:%s/%s" .driver .host (toString .port) .dbname) | quote -}}
              {{- end }}
            - name: HQ_WS_MIRID_CONTROLLER_CONFIG_RDBMS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: hq-mirid-controller-database-credentials
                  key: username
            - name: HQ_WS_MIRID_CONTROLLER_CONFIG_RDBMS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hq-mirid-controller-database-credentials
                  key: password
            - name: HQ_WS_MIRID_CONTROLLER_CONFIG_REDIS_HOST
              value: "redis"
            - name: HQ_WS_MIRID_CONTROLLER_CONFIG_REDIS_PORT
              value: {{ .Values.redis.port | quote }}
            - name: HQ_WS_MIRID_CONTROLLER_CONFIG_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUERURI
              value: "https://auth.identifiers.org/auth/realms/idorg/"
            - name: HQ_WS_MIRID_CONTROLLER_CONFIG_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: hq-mirid-controller-keycloak-credentials
                  key: clientid
            - name: HQ_WS_MIRID_CONTROLLER_CONFIG_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: hq-mirid-controller-keycloak-credentials
                  key: clientsecret
            - name: HQ_WS_MIRID_CONTROLLER_CONFIG_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI
              value: "https://auth.identifiers.org/auth/realms/idorg"
          ports:
            - containerPort: {{ .Values.mirid_controller.port }}
          readinessProbe:
            httpGet:
              path: /healthApi/readiness_check
              port: {{ .Values.mirid_controller.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthApi/liveness_check
              port: {{ .Values.mirid_controller.port }}
            initialDelaySeconds: 90
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: mirid-controller
  labels:
    tier: api
    component: mirid-controller
    {{- (include "common_labels" .) | indent 4 }}
spec:
  ports:
    - port: 8181
  selector:
    tier: api
    component: mirid-controller
    {{- (include "common_labels" .) | indent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: nodeport-mirid-controller
  labels:
    tier: api
    component: mirid-controller
    {{- (include "common_labels" .) | indent 4 }}
spec:
  ports:
    - port: {{ .Values.mirid_controller.port }}
  selector:
    tier: api
    component: mirid-controller
    {{- (include "common_labels" .) | indent 4 }}
  type: NodePort
---
